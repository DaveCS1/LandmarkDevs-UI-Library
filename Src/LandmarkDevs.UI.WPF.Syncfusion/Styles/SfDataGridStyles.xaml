<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                    xmlns:sf="http://schemas.syncfusion.com/wpf"
                    xmlns:sfgrid="clr-namespace:Syncfusion.UI.Xaml.Grid;assembly=Syncfusion.SfGrid.WPF">

    <!--#region Current Styles-->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:NotZeroToVisibilityConverter x:Key="NotZeroToVisibilityConverter" />
    <sfgrid:SortDirectionToVisibilityConverter x:Key="SortDirectionToVisibilityConverter" />
    <sfgrid:SortDirectionToWidthConverter x:Key="SortDirectionToWidthConverter" />

    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid Name="Root"
              Margin="5,0"
              Opacity="0"
              RenderTransformOrigin="0,0">
            <UIElement.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </UIElement.RenderTransform>
            <Border Margin="4,4,-4,-4"
                    Background="#052A2E31"
                    CornerRadius="5" />
            <Border Margin="3,3,-3,-3"
                    Background="#152A2E31"
                    CornerRadius="4" />
            <Border Margin="2,2,-2,-2"
                    Background="#252A2E31"
                    CornerRadius="3" />
            <Border Margin="1,1,-1,-1"
                    Background="#352A2E31"
                    CornerRadius="2" />
            <Border Background="#FFDC000C" CornerRadius="2" />
            <Border CornerRadius="2">
                <TextBlock MaxWidth="250"
                           Margin="8,4,8,4"
                           Foreground="#FFFFFFFF"
                           Text="{TemplateBinding FrameworkElement.Tag}"
                           TextWrapping="Wrap"
                           UseLayoutRounding="False" />
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="xform"
                                                 Storyboard.TargetProperty="X"
                                                 To="0"
                                                 Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="Root"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1"
                                                 Duration="0:0:0.2" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="xform"
                                             Storyboard.TargetProperty="X"
                                             To="0"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style x:Key="MaterialGridCellWithValidationStyle" TargetType="{x:Type sfgrid:GridCell}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="FontFamily" Value="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="#E0E0E0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="CurrentCellBorderBrush" Value="#F5F5F5" />
        <Setter Property="CurrentCellBorderThickness" Value="0" />
        <Setter Property="TextBlock.FontWeight" Value="Regular" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="TextBlock.FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sfgrid:GridCell}">
                    <Grid SnapsToDevicePixels="True">
                        <Border Background="{TemplateBinding CellSelectionBrush}"
                                SnapsToDevicePixels="True"
                                Visibility="{TemplateBinding SelectionBorderVisibility}" />

                        <Border x:Name="PART_GridCellBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">

                            <Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                            </Grid>

                        </Border>

                        <Border Margin="0,0,1,1"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding CurrentCellBorderBrush}"
                                BorderThickness="{TemplateBinding CurrentCellBorderThickness}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="True"
                                Visibility="{TemplateBinding CurrentCellBorderVisibility}" />

                        <Border x:Name="PART_InValidCellBorder"
                                Width="10"
                                Height="10"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                SnapsToDevicePixels="True"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip Background="#FFDB000C"
                                         Placement="Right"
                                         PlacementRectangle="20,0,0,0"
                                         Tag="{TemplateBinding ErrorMessage}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>

                            <Path Cursor="Hand"
                                  Data="M0.5,0.5 L12.652698,0.5 12.652698,12.068006 z"
                                  Fill="Red"
                                  SnapsToDevicePixels="True"
                                  Stretch="Fill" />

                        </Border>
                        <VisualStateManager.VisualStateGroups>

                            <VisualStateGroup x:Name="IndicationStates">

                                <VisualState x:Name="HasError">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_InValidCellBorder" Storyboard.TargetProperty="Width">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0" Value="10" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="PART_InValidCellBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="NoError">
                                    <Storyboard BeginTime="0">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_InValidCellBorder" Storyboard.TargetProperty="Width">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="PART_InValidCellBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="BorderStates">

                                <VisualState x:Name="NormalCell" />

                                <VisualState x:Name="FrozenColumnCell">
                                    <Storyboard BeginTime="0">
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_GridCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0,0,1,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="FooterColumnCell">
                                    <Storyboard BeginTime="0">
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_GridCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="1,0,1,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="BeforeFooterColumnCell">
                                    <Storyboard BeginTime="0">
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_GridCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0,0,0,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialGridCellStyle" TargetType="{x:Type sfgrid:GridCell}">
        <!--<Setter Property="FocusVisualStyle" Value="{x:Null}" />-->
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="#E0E0E0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="CurrentCellBorderBrush" Value="{DynamicResource MaterialDesignSelection}" />
        <Setter Property="CurrentCellBorderThickness" Value="0" />
        <Setter Property="TextBlock.FontWeight" Value="Regular" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="TextBlock.FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sfgrid:GridCell}">
                    <Grid SnapsToDevicePixels="True">
                        <Border Background="{TemplateBinding CellSelectionBrush}"
                                SnapsToDevicePixels="True"
                                Visibility="{TemplateBinding SelectionBorderVisibility}" />
                        <Border x:Name="PART_GridCellBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Opacity="{TemplateBinding AnimationOpacity}" />
                        </Border>
                        <Border Margin="0,0,1,1"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding CurrentCellBorderBrush}"
                                BorderThickness="{TemplateBinding CurrentCellBorderThickness}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="True"
                                Visibility="{TemplateBinding CurrentCellBorderVisibility}" />
                        <Border x:Name="PART_InValidCellBorder"
                                Width="10"
                                Height="10"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                SnapsToDevicePixels="True"
                                Visibility="Collapsed">
                            <Border.ToolTip>
                                <ToolTip Background="#FFDB000C"
                                         Placement="Right"
                                         PlacementRectangle="20,0,0,0"
                                         Tag="{TemplateBinding ErrorMessage}">
                                    <ToolTip.Template>
                                        <ControlTemplate>
                                            <Grid x:Name="Root"
                                                  Margin="5,0"
                                                  Opacity="0"
                                                  RenderTransformOrigin="0,0">
                                                <Grid.RenderTransform>
                                                    <TranslateTransform X="-25" />
                                                </Grid.RenderTransform>
                                                <Border Margin="4,4,-4,-4"
                                                        Background="#052A2E31"
                                                        CornerRadius="5" />
                                                <Border Margin="3,3,-3,-3"
                                                        Background="#152A2E31"
                                                        CornerRadius="4" />
                                                <Border Margin="2,2,-2,-2"
                                                        Background="#252A2E31"
                                                        CornerRadius="3" />
                                                <Border Margin="1,1,-1,-1"
                                                        Background="#352A2E31"
                                                        CornerRadius="2" />
                                                <Border Background="#FFDC000C" CornerRadius="2" />
                                                <Border CornerRadius="2">
                                                    <TextBlock MaxWidth="250"
                                                               Margin="8,4"
                                                               Foreground="{DynamicResource MaterialDesignBody}"
                                                               Text="{TemplateBinding Tag}"
                                                               TextWrapping="Wrap"
                                                               UseLayoutRounding="False" />
                                                </Border>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="OpenStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition GeneratedDuration="0"
                                                                              GeneratedEasingFunction="{x:Null}"
                                                                              Storyboard="{x:Null}"
                                                                              From="{x:Null}"
                                                                              To="{x:Null}" />
                                                            <VisualTransition GeneratedDuration="0:0:0.2"
                                                                              GeneratedEasingFunction="{x:Null}"
                                                                              From="{x:Null}"
                                                                              To="Open">
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="xform"
                                                                                     Storyboard.TargetProperty="X"
                                                                                     To="0"
                                                                                     Duration="0:0:0.2">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <BackEase Amplitude="0.3" EasingMode="EaseOut" />
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                    <DoubleAnimation Storyboard.TargetName="Root"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="1"
                                                                                     Duration="0:0:0.2" />
                                                                </Storyboard>
                                                            </VisualTransition>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Closed">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="Root"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0"
                                                                                 Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Open">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="xform"
                                                                                 Storyboard.TargetProperty="X"
                                                                                 To="0"
                                                                                 Duration="0" />
                                                                <DoubleAnimation Storyboard.TargetName="Root"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="1"
                                                                                 Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                    </ToolTip.Template>
                                </ToolTip>
                            </Border.ToolTip>
                            <Path Data="M0.5,0.5L12.652698,0.5 12.652698,12.068006z"
                                  Fill="Red"
                                  SnapsToDevicePixels="True"
                                  Stretch="Fill" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="IndicationStates">
                                <VisualState x:Name="NoError">
                                    <Storyboard BeginTime="0">
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Storyboard.TargetName="PART_InValidCellBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HasError">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Storyboard.TargetName="PART_InValidCellBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BorderStates">
                                <VisualState x:Name="NormalCell" />
                                <VisualState x:Name="FrozenColumnCell">
                                    <Storyboard BeginTime="0">
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_GridCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0,0,1,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FooterColumnCell">
                                    <Storyboard BeginTime="0">
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_GridCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="1,0,1,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BeforeFooterColumnCell">
                                    <Storyboard BeginTime="0">
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_GridCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0,0,0,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MaterialGridHeaderCellStyle" TargetType="{x:Type sf:GridHeaderCellControl}">
        <!--<Setter Property="Padding" Value="5,3" />-->
        <!--<Setter Property="Foreground" Value="Gray" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />-->
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="sfgrid:VisualContainer.WantsMouseInput" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignSelection}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="TextBlock.FontWeight" Value="Regular" />
        <Setter Property="FontFamily" Value="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" />
        <Setter Property="Padding" Value="5,5,5,5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="TextBlock.FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sf:GridHeaderCellControl}">
                    <Grid>
                        <Border x:Name="PART_FooterCellBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border x:Name="PART_HeaderCellBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Focusable="False" />
                                <Border x:Name="PART_FilterPopUpPresenter" />
                                <Grid x:Name="PART_SortButtonPresenter"
                                      Grid.Column="1"
                                      SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0">
                                            <ColumnDefinition.MinWidth>
                                                <Binding Mode="OneWay"
                                                         Path="SortDirection"
                                                         RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <sf:SortDirectionToWidthConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </ColumnDefinition.MinWidth>
                                        </ColumnDefinition>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Path Width="8.938"
                                          Height="8.138"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="F1M753.644,-13.0589L753.736,-12.9639 753.557,-12.7816 732.137,8.63641 732.137,29.7119 756.445,5.40851 764.094,-2.24384 764.275,-2.42352 771.834,5.1286 796.137,29.4372 796.137,8.36163 774.722,-13.0589 764.181,-23.5967 753.644,-13.0589z"
                                          Fill="Gray"
                                          SnapsToDevicePixels="True"
                                          Stretch="Fill">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                        <Path.Visibility>
                                            <Binding ConverterParameter="Ascending"
                                                     Path="SortDirection"
                                                     RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <sfgrid:SortDirectionToVisibilityConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </Path.Visibility>
                                    </Path>
                                    <Path Width="8.938"
                                          Height="8.138"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="F1M181.297,177.841L181.205,177.746 181.385,177.563 202.804,156.146 202.804,135.07 178.497,159.373 170.847,167.026 170.666,167.205 163.107,159.653 138.804,135.345 138.804,156.42 160.219,177.841 170.76,188.379 181.297,177.841z"
                                          Fill="Gray"
                                          SnapsToDevicePixels="True"
                                          Stretch="Fill">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                        <Path.Visibility>
                                            <Binding ConverterParameter="Decending"
                                                     Path="SortDirection"
                                                     RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <sfgrid:SortDirectionToVisibilityConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </Path.Visibility>
                                    </Path>
                                    <TextBlock Grid.Column="1"
                                               Margin="0,-4,0,0"
                                               VerticalAlignment="Center"
                                               FontSize="10"
                                               Foreground="{TemplateBinding Foreground}"
                                               SnapsToDevicePixels="True"
                                               Text="{TemplateBinding SortNumber}"
                                               Visibility="{TemplateBinding SortNumberVisibility}" />
                                </Grid>
                                <sf:FilterToggleButton x:Name="PART_FilterToggleButton"
                                                       Grid.Column="2"
                                                       HorizontalAlignment="Stretch"
                                                       VerticalAlignment="Stretch"
                                                       SnapsToDevicePixels="True"
                                                       Visibility="{TemplateBinding FilterIconVisiblity}" />
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="HiddenColumnsResizingStates">
                                <VisualState x:Name="PreviousColumnHidden">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_HeaderCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="3,0,1,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HiddenState">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_HeaderCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="3,0,3,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NormalState" />
                                <VisualState x:Name="LastColumnHidden">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_HeaderCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0,0,3,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BorderStates">
                                <VisualState x:Name="NormalCell" />
                                <VisualState x:Name="FrozenColumnCell">
                                    <Storyboard BeginTime="0">
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_HeaderCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0,0,1,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FooterColumnCell">
                                    <Storyboard BeginTime="0">
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_FooterCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="1,0,1,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BeforeFooterColumnCell">
                                    <Storyboard BeginTime="0">
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_FooterCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0,0,0,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_HeaderCellBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0,0,0,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridRowMaterialDesignStyle" TargetType="{x:Type sfgrid:VirtualizingCellsControl}">
        <!--  Original  -->
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--  Custom  -->
        <Setter Property="FontFamily" Value="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="RowHoverBackgroundBrush" Value="{DynamicResource MaterialDesignSelection}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sfgrid:VirtualizingCellsControl}">
                    <Grid>
                        <Border x:Name="PART_RowBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="PART_CurrentFocusRow"
                                   Margin="{TemplateBinding CurrentFocusBorderMargin}"
                                   Stroke="DarkGray"
                                   StrokeDashArray="2 2"
                                   StrokeThickness="1"
                                   Visibility="{TemplateBinding CurrentFocusRowVisibility}" />
                        <Rectangle Clip="{TemplateBinding RowBackgroundClip}" Fill="{TemplateBinding Background}" />
                        <Border Background="{TemplateBinding RowSelectionBrush}"
                                Clip="{TemplateBinding SelectionBorderClipRect}"
                                Visibility="{TemplateBinding SelectionBorderVisiblity}" />
                        <Border Background="{TemplateBinding RowHoverBackgroundBrush}"
                                BorderBrush="{TemplateBinding RowHoverBackgroundBrush}"
                                BorderThickness="{TemplateBinding RowHighlightBorderThickness}"
                                Clip="{TemplateBinding HighlightBorderClipRect}"
                                SnapsToDevicePixels="True"
                                Visibility="{TemplateBinding HighlightSelectionBorderVisiblity}" />
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="BorderStates">
                                <VisualState x:Name="NormalRow" />
                                <VisualState x:Name="FrozenRow">
                                    <Storyboard BeginTime="0">
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_RowBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0,0,0,1" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FooterRow">
                                    <Storyboard BeginTime="0">
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_RowBorder"
                                                                          Storyboard.TargetProperty="BorderThickness"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0,1,0,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0"
                                                                          Storyboard.TargetName="PART_RowBorder"
                                                                          Storyboard.TargetProperty="Margin"
                                                                          Duration="1.0:0:0">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0,-1,0,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SfDataGridStyle" TargetType="{x:Type sf:SfDataGrid}">
        <Setter Property="CellStyle" Value="{StaticResource MaterialGridCellWithValidationStyle}" />
        <Setter Property="RowStyle" Value="{StaticResource GridRowMaterialDesignStyle}" />
        <Setter Property="HeaderStyle" Value="{StaticResource MaterialGridHeaderCellStyle}" />
        <!--<Setter Property="CaptionSummaryCellStyle" Value="{StaticResource GridCaptionSummaryCellDefaultStyle}" />
        <Setter Property="CaptionSummaryRowStyle" Value="{StaticResource CaptionSummaryRowControlDefaultStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource GridCellDefaultStyle}" />
        <Setter Property="DetailsViewDataGridStyle" Value="{StaticResource DetailsViewDataGridDefaultStyle}" />
        <Setter Property="FilterPopupStyle" Value="{StaticResource GridFilterControlDefaultStyle}" />
        <Setter Property="GroupDropAreaStyle" Value="{StaticResource GroupDropAreaDefaultStyle}" />
        <Setter Property="GroupSummaryCellStyle" Value="{StaticResource GridGroupSummaryCellDefaultStyle}" />
        <Setter Property="GroupSummaryRowStyle" Value="{StaticResource GroupSummaryRowControlDefaultStyle}" />
        <Setter Property="HeaderStyle" Value="{StaticResource GridHeaderCellControlDefaultStyle}" />
        <Setter Property="RowStyle" Value="{StaticResource VirtualizingCellsControlDefaultStyle}" />
        <Setter Property="TableSummaryCellStyle" Value="{StaticResource GridTableSummaryCellDefaultStyle}" />
        <Setter Property="TableSummaryRowStyle" Value="{StaticResource TableSummaryRowControlDefaultStyle}" />
        <Setter Property="UnBoundRowCellStyle" Value="{StaticResource GridUnBoundRowCellDefaultStyle}" />
        <Setter Property="UnBoundRowStyle" Value="{StaticResource UnBoundRowControlDefaultStyle}" />-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="SelectionUnit" Value="Any" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="FontFamily" Value="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="ScrollViewer.PanningRatio" Value="1" />
        <Setter Property="HeaderRowHeight" Value="64" />
        <Setter Property="AllowRowHoverHighlighting" Value="True" />
        <Setter Property="RowSelectionBrush" Value="{DynamicResource MaterialDesignSelection}" />
        <Setter Property="CurrentCellBorderBrush" Value="{DynamicResource MaterialDesignSelection}" />
        <Setter Property="CurrentCellBorderThickness" Value="0" />
        <Setter Property="ColumnSizer" Value="Auto" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="AllowDraggingColumns" Value="True" />
        <Setter Property="AllowEditing" Value="True" />
        <Setter Property="AllowFiltering" Value="True" />
        <Setter Property="ShowRowHeader" Value="False" />
        <Setter Property="RowHeight" Value="48" />
        <Setter Property="AllowResizingColumns" Value="True" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
        <Setter Property="EditTrigger" Value="OnTap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sf:SfDataGrid}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" SnapsToDevicePixels="True">
                            <Border.Visibility>
                                <Binding Path="ShowGroupDropArea" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <sfgrid:BoolToVisiblityConverter />
                                    </Binding.Converter>
                                </Binding>
                            </Border.Visibility>
                            <sf:GroupDropArea x:Name="PART_GroupDropArea" SnapsToDevicePixels="True" />
                        </Border>
                        <Border Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ScrollViewer"
                                          CanContentScroll="True"
                                          FlowDirection="{TemplateBinding FlowDirection}"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                          IsTabStop="False"
                                          PanningMode="{TemplateBinding ScrollViewer.PanningMode}"
                                          PanningRatio="{TemplateBinding ScrollViewer.PanningRatio}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <sfgrid:VisualContainer x:Name="PART_VisualContainer"
                                                        AllowFixedGroupCaptions="False"
                                                        Background="Transparent"
                                                        CanHorizontallyScroll="True"
                                                        CanVerticallyScroll="True"
                                                        ColumnCount="0"
                                                        FooterColumns="0"
                                                        FooterRows="0"
                                                        FrozenColumns="0"
                                                        FrozenRows="0"
                                                        HorizontalPadding="0"
                                                        HorizontalPixelScroll="True"
                                                        RowCount="0"
                                                        RowsGenerator="{x:Null}"
                                                        ScrollOwner="{x:Null}"
                                                        ScrollableOwner="{x:Null}"
                                                        VerticalPadding="0"
                                                        VerticalPixelScroll="True">
                                    <sfgrid:VisualContainer.RowHeightManager>
                                        <sf:RowHeightManager />
                                    </sfgrid:VisualContainer.RowHeightManager>
                                    <!--<Line />
                                    <Line />-->
                                </sfgrid:VisualContainer>
                            </ScrollViewer>
                        </Border>
                        <sfgrid:BusyDecorator x:Name="PART_BusyDecorator"
                                              Grid.Row="1"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Busy">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_BusyDecorator" Storyboard.TargetProperty="IsBusyIndicatorShowing">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>